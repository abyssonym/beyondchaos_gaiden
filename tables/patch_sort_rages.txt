# sorted rage indexes go at 307100
.def sort_rages_indexes 00 71 f0

025847:22 10 70 f0
:60

# clear accumulator, y register
307010:a9 00                # lda #$00
:a8                         # tay

# get learned rages byte, store in ee
.label main_loop
:bb                         # tyx
:bf sort_rages_indexes      # lda $,x
:4a 4a 4a                   # lsr x3
:aa                         # tax
:bd 2c 1d                   # lda $1d2c,x
:85 ee                      # sta $ee

# get bitmask for learned rage
:bb                         # tyx
:bf sort_rages_indexes      # lda $,x
:29 07                      # and #$07 (bottom three bits)

.label bitmask_loop
:c9 00                      # cmp #$00
:f0 rage_learn_check        # beq
:46 ee                      # lsr $ee
:3a                         # dec
:80 bitmask_loop            # bra

# check that rage is learned
.label rage_learn_check
:a9 01                      # lda #$01
:25 ee                      # and $ee
:c9 01                      # cmp #$01
:d0 terminate_loop_check    # bne (skip if not known)

# add rage to battle menu
:ee 9a 3a                   # inc $3a9a (number of rages known)
:bb                         # tyx
:bf sort_rages_indexes      # lda $,x
:8f 80 21 00                # sta $002180 (store rage in menu)

# check to terminate loop
.label terminate_loop_check
:c8                         # iny (advance to next enemy)
:c0 ff                      # cpy #$ff
:d0 main_loop               # bne (loop for all enemies 0 to 254)

# return from subroutine
:6b                         # rtl

3fffff:00
